Implement continuous delivery (10-15%)
Design a release strategy
• recommend release tools
• identify and recommend release approvals and gates
• recommend strategy for measuring quality of release and release process
• recommend strategy for release notes and documentation
• select appropriate deployment pattern
Set up a release management workflow
• automate inspection of health signals for release approvals by using release gates
• configure automated integration and functional test execution
• create a release pipeline (e.g., Azure Kubernetes Service, Service Fabric, WebApp)
• create multi-phase release pipelines
• integrate secrets with release pipeline
• provision and configure environments
• manage and modularize tasks and templates (e.g., task and variable groups)
Implement an appropriate deployment pattern
• implement blue-green deployments
• implement canary deployments
• implement progressive exposure deployments
• scale a release pipeline to deploy to multiple endpoints (e.g., deployment groups, Azure
Kubernetes Service, Service Fabric)
